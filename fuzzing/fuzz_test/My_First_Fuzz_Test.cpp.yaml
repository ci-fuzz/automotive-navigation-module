## Configuration of a CI Fuzz test
## Generated on 2021-08-20 with CI Fuzz 2.23.0
##
## Lines that start with "##" are explanations for the following
## setting, lines that start with "#" are settings that can be enabled
## by removing the "#".
##
## Settings in this file override settings in the project.yaml.

## The fuzz target type. If unspecified, the type is derived from the
## extension of the fuzz target source file.
type: "c++"

## Additional arguments to pass to the compiler during build.
compiler_extra_args:
  - "build/libAUTOMOTIVE-FUZZING-EXAMPLE-CPP.a"
  - "-Ibuild"
  - "-Imodules/crypto_module/src"
  - "-Imodules/time_module/src"
  - "-Imodules/key_management_module/src"
  - "-Imodules/GPS_module/src"
  - "-Ifuzzing"

## Additional arguments to pass to the fuzz target when it is executed.
## Note that any relative paths are resolved relative to the root of the
## project directory.
#run_extra_args:
#  - "-c myapp.conf"

## Options to pass to the fuzzing engine.
#engine_options:
#  libfuzzer:
#    -rss_limit_mb=4096

## Environment variables to set when executing the target
#environment:
#  - ASAN_OPTIONS=detect_leaks=0

## If set to true, do not use the generic input corpus for this
## fuzz target.
#no_initial_corpus: false

##### This section is only for Java fuzz targets #####

## Package filters to apply when instrumenting the source code.
#instrumentation_filters:
#  - com.my_company

## List of jar dependencies needed by the fuzz target
#jars:
#  - target/library_under_test-1.0.jar
